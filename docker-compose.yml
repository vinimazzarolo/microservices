version: '3.9'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  broker:
    image: bitnami/kafka:latest
    container_name: broker
    restart: unless-stopped
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS:PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  broker-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=microservices
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - broker
      - zookeeper

  webserver:
    image: caddy:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  producer:
    build:
      context: producer
      dockerfile: Dockerfile.dev
    container_name: producer
    restart: unless-stopped
    volumes:
      - ./producer:/app
    depends_on:
      - webserver

  consumer:
    build:
      context: consumer
      dockerfile: Dockerfile.dev
    container_name: consumer
    restart: unless-stopped
    volumes:
      - ./consumer:/app
    depends_on:
      - webserver
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - producer
      - consumer

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  caddy_data:
  caddy_config:
